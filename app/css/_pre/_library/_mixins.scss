@function emCalc($px-value, $font-size: $base-font-size) {
  @return $px-value / $font-size * 1em;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}

@mixin clearfix() {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

.clearfix { @include clearfix(); }

@mixin square($size) {
  height: $size;
  width: $size;
}

@mixin block-centered($width) {
  width: $width;
  margin-left: auto;
  margin-right: auto
}

@mixin strikethrough-divider($c-line, $w-mask, $h-mask, $centered: "", $bgc-mask: white) {
  position: relative;
  &:before,
  &:after {
    content: "";
    position: absolute;
    display: block;
    left: 0;
    z-index: -1;
  }
  &:before {
    width: 100%;
    height: 1px;
    top: 50%;
    background-color: $c-line;
  }
  &:after {
    top: 0;
    width: $w-mask;
    height: $h-mask;
    background-color: $bgc-mask;
  }
  @if $centered {
    &:after {
      left: 50%;
      margin-left: -($w-mask/2);
    }
  }
}

@mixin force-vertical-center-with-absolute-positioning($height) {
  position: absolute;
  top: 50%;
  height: $height;
  margin-top: -.5*($height);
}

@mixin horizontal-list-buffer($justification, $buffer, $element: li, $rtl: false) {
  @if $justification == 'left' {
    #{$element} {
      &:not(:last-of-type) {
        margin-right: $buffer;
      }
    }
  }
  @if $justification == 'right' {
    @if $rtl {
      #{$element} {
        &:not(:last-of-type) {
          margin-left: $buffer;
        }
      }
    }
    @else {
      #{$element} {
        &:not(:first-of-type) {
          margin-left: $buffer;
        }
      }
    }
  }
}

@mixin fix-inline-block($negative-margin) {
  margin-left: $negative-margin;
}

